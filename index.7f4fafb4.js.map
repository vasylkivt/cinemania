{"mappings":"iiBAAAA,EAAA,SAAAC,SAA8CC,KAAKC,MAAM,0R,4CCAzD,I,EAAAC,EAAAJ,EAAA,S,uCAKMK,G,aAAgB,IAAI,EAAAC,EAAAC,WAEpBC,G,EAAsBC,EAAAL,EAAA,CAAAK,EAAAC,GAAAC,MAAA,SAAAC,I,IAGhBC,EACFC,EACAC,E,kFAHNC,EAAAC,OAAOC,S,SACmBb,EAAcc,qBAAqB,Q,cAAvDN,EAASO,EAAAC,KAAPR,Q,SACiBR,EAAciB,gB,OAAjCR,EAAUM,EAAAC,KACVN,EAAcF,EAAQU,MAAM,EAAG,GAErCC,SAASC,cAAc,qCAAqCC,WAC1D,EAAAV,EAAAW,uBAAsBZ,EAAaD,G,kDAErCc,QAAQC,IAAI,SAAQT,EAAAU,I,QAEtBd,EAAAC,OAAOc,U,sGAGTvB,ICtBA,I,EAAAJ,EAAAJ,EAAA,S,aCAAgC,EAAiBhC,EAAA,SAAAiC,aAA6C,SAAWjC,EAAA,SAAAkC,QAA6C,S,MCAtHC,EAAiBnC,EAAA,SAAAiC,aAA6C,SAAWjC,EAAA,SAAAkC,QAA6C,S,8BFKhHE,EAAgB,IAAI,EAAA9B,EAAAC,U,SAGX8B,I,OAAAA,EAAf5B,EAAAL,EAAA,CAAAK,EAAAC,GAAAC,MAAA,SAAAC,I,IAEU0B,EAKAC,E,2FALcH,EAAcI,sB,OAA5BF,EAAKlB,EAAAC,KAEXG,SAASC,cAAc,qCAAqCC,UAC1De,EAA0BH,GAEtBC,EAAef,SAASC,cAAc,sBAChB,IAAI,EAAAiB,EAAAC,qBAAoBJ,EAAcD,GAC9CM,gB,kDAEpBhB,QAAQC,IAAGT,EAAAU,I,2DAXWe,MAAAC,KAAAC,U,CAe1B,SAASN,EAA0BO,G,IAgDnBC,EAAQC,EAAgBC,EA/CtCC,EADiCJ,EACjCI,cACAC,EAFiCL,EAEjCK,eACAC,EAHiCN,EAGjCM,aACAC,EAJiCP,EAIjCO,aACAC,EALiCR,EAKjCQ,WACAC,EANiCT,EAMjCS,WACAC,EAPiCV,EAOjCU,OACAC,EARiCX,EAQjCW,SACAC,EATiCZ,EASjCY,YAEA,MAAO,wIAUuCC,QA2BhCZ,EA/BCW,EA+BOV,EA/BME,EA+BUD,EA/BKE,EAgC5B,OAAXJ,GAAoBA,EAGD,OAAnBC,GAA4BA,EAIzB,wDAEkCW,OADCX,EAAe,sDAGTW,OAFPZ,EAAO,uEAInCY,OAFmCZ,EAAO,gGAEpCY,OAANV,EAAM,KATV,QAA4BU,OAApBpD,EAAA0B,GAAW,WAAe0B,OAANV,EAAM,KAHlC,QAA+BU,OAAvBpD,EAAAuB,GAAc,WAAe6B,OAANV,EAAM,MAjCa,6EAONU,OAHPR,EAAe,oMAM3CQ,OAHmCP,EAAa,4JAGNO,OAA1CN,EAAaO,QAAQ,GAAG,oBAGiBD,OAHCL,EAAW,+JAKjBK,OAFKJ,EAAW,kIAO5DI,OAOZ,SAAmBH,GACjB,OAAOA,EAAOK,KAAI,SAAAf,G,OAAOA,EAAJgB,I,IAAiBC,KAAK,K,CAbWC,CAAUR,GAAQ,2JAKrDG,OAATF,EAAS,qH,aApDNtB,EAAWQ,MAAAC,KAAAC,U,CAF1BoB,E","sources":["node_modules/@parcel/runtime-js/lib/runtime-1bc617d1275fb71b.js","src/js/pages/home/weekly-trends.js","src/js/pages/home/upcoming-this-month.js","node_modules/@parcel/runtime-js/lib/runtime-753d01ae35071b3b.js","node_modules/@parcel/runtime-js/lib/runtime-6b5975ecc88c3851.js"],"sourcesContent":["require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"EVgbq\\\":\\\"index.7f4fafb4.js\\\",\\\"gVEw5\\\":\\\"default_horizontal_poster_path.736ae198.jpg\\\",\\\"aI1lb\\\":\\\"default-image-for-movie.30fb3bbd.webp\\\",\\\"7mVsD\\\":\\\"catalog.cdefa16d.css\\\",\\\"30zUr\\\":\\\"catalog.6ff2d05c.js\\\"}\"));","import { TMDB_API } from '../../api/';\nimport { Loader } from '../../components';\n\nimport { createMarkupMovieList } from '../../components';\n\nconst themoviedbAPI = new TMDB_API();\n\nconst getTrendMovieOfWeek = async () => {\n  try {\n    Loader.onShow();\n    const { results } = await themoviedbAPI.getTrendMovieByParam('week');\n    const genresList = await themoviedbAPI.getGenresList();\n    const correctList = results.slice(0, 3);\n\n    document.querySelector('.js-home-weekly-trends-movie-list').innerHTML =\n      createMarkupMovieList(correctList, genresList);\n  } catch (error) {\n    console.log('Error:', error);\n  }\n  Loader.onClose();\n};\n\ngetTrendMovieOfWeek();\n","import comingSoonImg from '../../../images/default-image-for-movie.webp';\nimport defaultImg from '../../../images/default_horizontal_poster_path.jpg';\nimport { TMDB_API } from '../../api/';\nimport { ServiceAddRemoveBtn } from '../../events/add-remove-movie';\n\nconst themoviedbAPI = new TMDB_API();\ngetNewFilms();\n\nasync function getNewFilms() {\n  try {\n    const movie = await themoviedbAPI.randomUpcomingFilms();\n\n    document.querySelector('.home-upcoming-this-month-wrapper').innerHTML =\n      createUpcomingMovieMarkup(movie);\n\n    const addRemoveBtn = document.querySelector('.js-add-remove-btn');\n    const serviceAddRemoveBtn = new ServiceAddRemoveBtn(addRemoveBtn, movie);\n    serviceAddRemoveBtn.setButtonName();\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction createUpcomingMovieMarkup({\n  backdrop_path,\n  original_title,\n  release_date,\n  vote_average,\n  vote_count,\n  popularity,\n  genres,\n  overview,\n  poster_path,\n}) {\n  return `\n    <img\n        class=\"home-upcoming-this-month-img\"\n        loading=\"lazy\"\n        width=\"280\"\n        height=\"402\"\n        ${getImg(poster_path, backdrop_path, original_title)}\n      />\n\n      <div>\n        <h3 class=\"home-upcoming-movie-title\">${original_title}</h3>\n        <div class=\"home-upcoming-movie-details-wrapper\">\n          <p class=\"home-upcoming-movie-details-names\">Release date</p>\n          <p class=\"home-upcoming-movie-detail-date\">${release_date}</p>\n          <p class=\"home-upcoming-movie-details-names\">Vote / Votes</p>\n          <p class=\"home-upcoming-movie-detail-vote\">\n            <span>${vote_average.toFixed(1)}</span> / <span>${vote_count}</span>\n          </p>\n          <p class=\"home-upcoming-movie-details-names\">Popularity</p>\n          <p class=\"home-upcoming-movie-detail-popularity\">${popularity}</p>\n          <p class=\"home-upcoming-movie-details-names\">Genre</p>\n          <p class=\"home-upcoming-movie-detail-genre\">${allGenres(genres)}\n          </p>\n        </div>\n        <p class=\"home-upcoming-movie-desc-title\">About</p>\n        <p class=\"home-upcoming-movie-desc\">\n          ${overview}\n        </p>\n\n        <button class=\"js-add-remove-btn button-accent\">Add to my library</button>\n      </div>`;\n}\n\nfunction allGenres(genres) {\n  return genres.map(({ name }) => name).join(', ');\n}\n\nfunction getImg(poster, backdropPoster, title) {\n  if (poster === null || !poster) {\n    return `src='${comingSoonImg}' alt='${title}'`;\n  }\n  if (backdropPoster === null || !backdropPoster) {\n    return `src='${defaultImg}' alt='${title}'`;\n  }\n\n  return ` srcset=\"\n          https://image.tmdb.org/t/p/w1280${backdropPoster} 1280w,\n          https://image.tmdb.org/t/p/w342${poster}  280w\n        \"\n        src=\"https://image.tmdb.org/t/p/original${poster}\"\n        sizes=\" (min-width: 768px) 704px, (min-width: 320px) 280px, 100vw\"\n        alt=\"${title}\"`;\n}\n","module.exports = require('./helpers/bundle-url').getBundleURL('EVgbq') + require('./helpers/bundle-manifest').resolve(\"aI1lb\");","module.exports = require('./helpers/bundle-url').getBundleURL('EVgbq') + require('./helpers/bundle-manifest').resolve(\"gVEw5\");"],"names":["parcelRequire","register","JSON","parse","$bpxeT","$b8136e79777b5feb$var$themoviedbAPI","$i24Cx","TMDB_API","$b8136e79777b5feb$var$getTrendMovieOfWeek","$parcel$interopDefault","$2TvXO","mark","_callee","results","genresList","correctList","$1V9lP","Loader","onShow","getTrendMovieByParam","_ctx","sent","getGenresList","slice","document","querySelector","innerHTML","createMarkupMovieList","console","log","t0","onClose","$3dc41381675155e2$exports","getBundleURL","resolve","$9ab86a604b3f214a$exports","$e62ad7fb5543dbf3$var$themoviedbAPI","$e62ad7fb5543dbf3$var$_getNewFilms","movie","addRemoveBtn","randomUpcomingFilms","$e62ad7fb5543dbf3$var$createUpcomingMovieMarkup","$6S7o7","ServiceAddRemoveBtn","setButtonName","apply","this","arguments","param","poster","backdropPoster","title","backdrop_path","original_title","release_date","vote_average","vote_count","popularity","genres","overview","poster_path","concat","toFixed","map","name","join","$e62ad7fb5543dbf3$var$allGenres","$e62ad7fb5543dbf3$var$getNewFilms"],"version":3,"file":"index.7f4fafb4.js.map"}